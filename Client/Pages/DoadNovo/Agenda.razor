@page "/doadNovo/agenda/{id}/{telefone}"
@using Operacao.Shared.Models;
@using Operacao.Shared.Utils;
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject HttpClient Http
@inject NavigationManager NavManager

<h3>Agenda</h3>
<hr />

<a href="javascript:history.back()">Voltar</a>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger" role="alert">
        @message
    </div>
}


<div class="card" style="width: 400px;">
    <div class="card-body">
        <form method="post" @onsubmit="@Submit">
            <div class="form-row">
                <div class="col d-lg-flex align-items-lg-center">
                    <label style="width: 40px;margin-right: 10px;">Data</label>
                    <input class="form-control" type="date" name="dt" @bind-value="@dt" min="@dt.ToString("yyyy-MM-dd")" required />
                </div>
            </div>
            <div class="form-row" style="margin-top:10px;">
                <div class="col d-lg-flex align-items-lg-center">
                    <label style="width: 40px;margin-right: 10px;">Hora</label>
                    <select class="form-control" name="hora" @bind="@hora" required>
                        <option>08:00</option>
                        <option>08:30</option>
                        <option>09:00</option>
                        <option>09:30</option>
                        <option>10:00</option>
                        <option>10:30</option>
                        <option>11:00</option>
                        <option>11:30</option>
                        <option>12:00</option>
                        <option>12:30</option>
                        <option>13:00</option>
                        <option>13:30</option>
                        <option>14:00</option>
                        <option>14:30</option>
                        <option>15:00</option>
                        <option>15:30</option>
                        <option>16:00</option>
                        <option>16:30</option>
                        <option>17:00</option>
                        <option>17:30</option>
                        <option>18:00</option>
                        <option>18:30</option>
                        <option>19:00</option>
                        <option>19:30</option>
                        <option>20:00</option>
                        <option>20:30</option>
                    </select>
                </div>
            </div>
            <div class="form-row" style="margin-top: 10px;">
                <div class="col">
                    <button class="btn btn-primary float-right" type="submit">Agendar</button>
                </div>
            </div>
        </form>
    </div>
</div>


@code {
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string Telefone { get; set; }

    private DateTime dt = DateTime.Now;
    private string hora = "";
    private string message;

    private Funcionario usuario;
    private int idTurno;
    private int idFuncionario;


    protected override void OnInitialized()
    {
        usuario = sessionStorage.GetItem<Funcionario>("usuario");
    }

    private async Task Submit()
    {
        message = null;
        TimeSpan hora2 = TimeSpan.Parse(hora);

        dt = new DateTime(dt.Year, dt.Month, dt.Day, hora2.Hours, hora2.Minutes, 0);

        if (dt < Converter.TimeZone(DateTime.UtcNow))
        {
            message = "A data não pode ser inferior a agora!";
            return;
        }

        await VerificaTurno();

        await Http.GetAsync("api/doadnovo/agendar/" + Id + "/" + dt.ToString("yyyy-MM-dd HH:mm:ss") + "/" + idFuncionario);
        await Http.PostAsJsonAsync<AcaoDoadNovo>("api/AcaoDoadNovo", AcaoAgendou());
        NavManager.NavigateTo("/doadNovo/index/");
    }

    private async Task VerificaTurno()
    {
        TimeSpan hora2 = TimeSpan.Parse(hora);

        if (hora2 >= TimeSpan.Parse("08:00") && hora2 <= TimeSpan.Parse("14:00"))
        {
            idTurno = 1;
        }
        else
        {
            idTurno = 2;
        }

        if (idTurno == 1 && (usuario.TurnoId == 1 || usuario.TurnoId == 3))
        {
            idFuncionario = usuario.Id;
        }
        else if (idTurno == 2 && (usuario.TurnoId == 2 || usuario.TurnoId == 3))
        {
            idFuncionario = usuario.Id;
        }
        else
        {
            idFuncionario = await Http.GetFromJsonAsync<int>("api/doadnovo/operadorturno/" + idTurno);
            if (idFuncionario == 0)
            {
                idFuncionario = usuario.Id;
            }
        }

    }

    private AcaoDoadNovo AcaoAgendou()
    {
        AcaoDoadNovo acao = new AcaoDoadNovo
        {
            PessoaId = Convert.ToInt32(Id),
            Telefone = Telefone,
            Descricao = "Agendou Retorno",
            Dt = Converter.TimeZone(DateTime.UtcNow),
            FuncionarioId = usuario.Id
        };
        return acao;
    }
}
